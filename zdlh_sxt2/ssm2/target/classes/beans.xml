<?xml version="1.0" encoding="UTF-8"?>
<beans
		xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:p="http://www.springframework.org/schema/p"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:aop="http://www.springframework.org/schema/aop"
		xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-4.3.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
                        http://www.springframework.org/schema/mvc
                        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">
	<!-- 配置数据库链接的基本信息 -->


	<!--  数据库资源文件的位置及其名称 -->
	<context:property-placeholder location="classpath:db.properties"/>
	<!--开启注解扫描-->
	<context:component-scan base-package="com.sxt"/>



	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>

	</bean>



	<!-- 配置mybatis所需要的会话工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:sqlMapConfig.xml"></property>

		<!-- 配置mapper扫描文件的扫描位置 -->

		<!--扫描某个包下的有所有mapper.xml-->
		<property name="mapperLocations">
			<value>classpath:mapper/*.xml</value>
		</property>

	</bean>



	<!-- 配置mapper扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 指定mapper自动扫描的包,注意如果使用的是mapper扫描器，那么dao层完全是依赖于接口开发，不需要具体的实现类 -->
		<property name="basePackage" value="com.sxt.dao"></property>
		<!-- 配置mapper所使用的会话工厂 -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>


	<!-- 配置事务管理器  -->

	<!-- <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean> -->
	<!--配置事务-->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!--注解事务-->
	<tx:annotation-driven transaction-manager="txManager"/>
	<!-- 事务处理  -->
	<!-- <aop:config>
        声明切入点
        <aop:pointcut expression="execution(* com.bawei.ssm.service..*.*(..))" id="trPointcut"/>
        通知与切入点关联
        <aop:advisor advice-ref="trAdvice" pointcut-ref="trPointcut"/>
    </aop:config>

    <tx:advice id="trAdvice" transaction-manager="transactionManager">
        propagation事务的传播行为
        isolation 事物的隔离级别

        <tx:attributes>
            <tx:method name="insert*" propagation="REQUIRED" read-only="false"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="add*" propagation="REQUIRED"/>
            <tx:method name="do*" propagation="REQUIRED"/>
            <tx:method name="*" propagation="REQUIRED" read-only="true"/>
        </tx:attributes>
    </tx:advice>	    -->
</beans>